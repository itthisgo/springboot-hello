name: CI/CD for Spring Boot with Infra Setup (Terraform & Ansible)

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Apply Terraform
        run: |
          terraform apply -auto-approve \
            -var "key_name=myserver" \
            -var "ec2_ssh_key=${{ secrets.EC2_SSH_KEY }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        working-directory: terraform

      - name: Save EC2 Public IP
        run: |
          EC2_IP=$(terraform output -raw ec2_public_ip | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}')
          if [ -z "$EC2_IP" ]; then
            echo "EC2 Public IP not found! Deployment cannot proceed."
            exit 1
          fi
          echo "EC2_IP=$EC2_IP" >> $GITHUB_ENV
        working-directory: terraform

  ansible:
    needs: terraform
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Ansible
        run: sudo apt update && sudo apt install -y ansible

      - name: Run Ansible Playbook
        run: ansible-playbook -i "$EC2_IP," ansible/playbook.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"

  deploy:
    runs-on: ubuntu-latest
    needs: ansible

    steps:
      - name: Set Timezone to KST
        run: |
          sudo ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime
          echo "Timezone set to: $(date)"

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build -x test

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" | tr -d '\r' > ~/.ssh/github-action-key
          chmod 600 ~/.ssh/github-action-key
          ls -l ~/.ssh

      - name: Check EC2_IP before SSH
        run: |
          if [ -z "$EC2_IP" ]; then
            echo "EC2_IP is empty! Deployment cannot proceed."
            exit 1
          fi

      - name: Deploy to AWS EC2
        run: |
          ssh -i ~/.ssh/github-action-key -o StrictHostKeyChecking=no ubuntu@$EC2_IP
          scp -T -i ~/.ssh/github-action-key -o StrictHostKeyChecking=no build/libs/springboot-hello-0.0.1-SNAPSHOT.jar ubuntu@$EC2_IP:/home/ubuntu/app.jar
          ssh -i ~/.ssh/github-action-key -o StrictHostKeyChecking=no ubuntu@$EC2_IP << 'EOF'
            sudo pkill -f 'java -jar'
            nohup java -jar /home/ubuntu/app.jar > /dev/null 2>&1 &
          EOF

