name: CI/CD for Spring Boot with Infra Setup (Terraform & Ansible)

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      ec2_ip: ${{ steps.get_ec2_ip.outputs.ec2_ip }}  # Terraform에서 EC2 IP를 Outputs으로 저장

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Apply Terraform
        run: |
          terraform apply -auto-approve \
            -var "key_name=myserver" \
            -var "ec2_ssh_key=${{ secrets.EC2_SSH_KEY }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        working-directory: terraform

      - name: Save EC2 Public IP to Outputs
        id: get_ec2_ip
        run: |
          EC2_IP=$(terraform output -raw ec2_public_ip)  # Terraform에서 Public IP 가져오기
          if [ -z "$EC2_IP" ]; then
            echo "EC2 Public IP not found! Deployment cannot proceed."
            exit 1
          fi
          echo "Extracted EC2_IP: $EC2_IP"
          echo "::set-output name=ec2_ip::$EC2_IP"  # GitHub Actions Outputs에 저장
        working-directory: terraform

  ansible:
    needs: terraform
    runs-on: ubuntu-latest
    env:
      EC2_IP: ${{ needs.terraform.outputs.ec2_ip }}  # Terraform Output을 env에 저장

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Ansible
        run: sudo apt update && sudo apt install -y ansible

      - name: Debug EC2_IP before Ansible
        run: echo "EC2_IP from Terraform: ${{ env.EC2_IP }}"

      - name: Run Ansible Playbook
        run: ansible-playbook -i "$EC2_IP," ansible/playbook.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"

  deploy:
    runs-on: ubuntu-latest
    needs: ansible
    env:
      EC2_IP: ${{ needs.terraform.outputs.ec2_ip }}  # Terraform의 outputs에서 EC2_IP 가져오기

    steps:
      - name: Debug EC2_IP before Deploy
        run: echo "EC2_IP from Terraform: $EC2_IP"

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" | tr -d '\r' > ~/.ssh/github-action-key
          chmod 600 ~/.ssh/github-action-key
          ls -l ~/.ssh

      - name: Check EC2_IP before SSH
        run: |
          if [ -z "$EC2_IP" ]; then
            echo "EC2_IP is empty! Deployment cannot proceed."
            exit 1
          fi
      - name: Deploy to AWS EC2
        env:
          EC2_IP: ${{ needs.terraform.outputs.ec2_ip }}
        run: |
          ssh -i ~/.ssh/github-action-key -o StrictHostKeyChecking=no ubuntu@$EC2_IP
          scp -T -i ~/.ssh/github-action-key -o StrictHostKeyChecking=no build/libs/springboot-hello-0.0.1-SNAPSHOT.jar ubuntu@$EC2_IP :/home/ubuntu/app.jar
          ssh -i ~/.ssh/github-action-key -o StrictHostKeyChecking=no ubuntu@$EC2_IP << 'EOF'
            sudo pkill -f 'java -jar'
            nohup java -jar /home/ubuntu/app.jar > /dev/null 2>&1 &
          EOF

